@import 'mixins';
@import 'variables/easings';

.container {
    position: relative;
    padding-top: vw(10);
    display: grid;
    grid-template-rows: vw(10) auto vw(10);
    grid-template-columns: 100%;
    gap: 0.2em;
    letter-spacing: vw(-0.2);
    height: 3em;
    max-height: 3em;
    // transition: max-height 1000ms var(--easing);


    &:has(textarea:focus),
    &:has(textarea.is-not-empty) {
        height: 9em;
        max-height: 9em;
    }
}

.label {
    --timing: 200ms;
    --easing: ease-out;

    grid-column: 1;
    grid-row: 2;
    @include font-size(14, 1);
    font-weight: 500;
    color: var(--color-text);
    transition: transform var(--timing) var(--easing), font-size var(--timing) linear, color var(--timing) linear;
    pointer-events: none;
    padding-bottom: 0.1em;
}

.input {
    grid-column: 1;
    grid-row: 2;
    @include font-size(14, 1.3);
    color: transparent;
    background-color: transparent;
    border-bottom: var(--border-light);
    //
    border: none;
    outline: none;
    resize: none;
    overflow: hidden;

    &::placeholder {
        color: transparent;
        display: none;
    }

    &:focus,
    &.is-not-empty {
        border-bottom: var(--border-active);
        color: var(--color-text);
    }

    &:focus ~ .label,
    &.is-not-empty ~ .label {
        color: var(--color-grey);
        @include font-size(10, 1);
        transform: translateY(-1.5em);
    }

    .is-error & {
        border-bottom: var(--border-error);
    }

    &:autofill {
        // display: none;
        // opacity: 0;
    }
}

.error {
    grid-column: 1;
    grid-row: 3;
    @include font-size(11, 1);
    color: var(--color-red);
    transition: opacity 333ms linear;
    opacity: 0;

    .is-error & {
        opacity: 1;
    }
}

.show {
    position: absolute;
    bottom: 1em;
    right: 0;

    svg {
        transition: fill 200ms linear;
    }

    &.is-password-visible path {
        fill: var(--color-accent-blue);
    }
}
