@import 'mixins';
@import 'variables/easings';

.container {
    position: relative;
    padding-top: 0.5em;
    display: grid;
    grid-template-rows: vw(10) auto vw(10);
    grid-template-columns: 100%;
    gap: 0.2em;
    letter-spacing: vw(0.01);

    &:has(.show) .input {
        padding-right: 1.5em;
        overflow: hidden;
    }

    @include hover {
        .remove {
            opacity: 1;

            svg {
                --color: var(--color-accent-blue);
            }
        }
    }
}

.label {
    --timing: 200ms;
    --easing: ease-out;

    grid-column: 1;
    grid-row: 2;
    @include font-size(14, 1);
    font-weight: 500;
    color: var(--color-text);
    text-transform: capitalize;
    transition: transform var(--timing) var(--easing), font-size var(--timing) linear, color var(--timing) linear;
}

.input {
    grid-column: 1;
    grid-row: 2;
    @include font-size(14, 1.3);
    color: transparent;
    background-color: transparent;
    border-bottom: var(--border-light);

    &::placeholder {
        color: transparent;
        display: none;
    }

    &:focus,
    &.is-not-empty {
        border-bottom: var(--border-active);
        color: var(--color-text);
    }

    &:focus ~ .label,
    &.is-not-empty ~ .label {
        color: var(--color-grey);
        @include font-size(10, 1);
        transform: translateY(-75%);
    }

    .is-error & {
        border-bottom: var(--border-error);
    }

    &:autofill {
        // TODO: whats this
        // display: none;
        // opacity: 0;
    }
}

.error {
    grid-column: 1;
    grid-row: 3;
    @include font-size(11, 1);
    color: var(--color-red);
    transition: opacity 333ms linear;
    opacity: 0;

    .is-error & {
        opacity: 1;
    }
}

.show {
    position: absolute;
    bottom: 1em;
    right: 0;

    svg {
        transition: fill 200ms linear;
    }

    &.is-password-visible path {
        fill: var(--color-accent-blue);
    }
}

.remove {
    position: absolute;
    right: 0;
    top: 0.5em;
    opacity: 0;
}
