@import 'mixins';
@import 'variables/sizes';
@import 'variables/easings';

$livesearch-text-padding: 14;
$size-search-btn: $size-button + $size-filters-left-offset;

.livesearch {
    height: 100%;
    width: fit-content;
    position: relative;
    border-right: var(--border-bright);
    border-radius: var(--border-radius);
    overflow: hidden;
    transition: color var(--transition-fast), var(--transition-fast);
    transition-timing-function: $ease-custom;

    @include hover {
        color: var(--color-white);

        .input {
            background-color: var(--color-accent-blue);
        }
    }

    &:focus-within {
        color: var(--color-text) !important;

        .input {
            background-color: var(--color-bg) !important;
        }
    }
}

.item {
    @include flex(row, flex-start, center);
    height: 100%;
    position: relative;
}

.input {
    font-family: var(--font-primary);
    font-weight: 700;
    height: 100%;
    @include font-size(18, 1);
    letter-spacing: -0.5px;
    width: vw($size-dashboard-livesearch-width);
    padding: 0 vw($size-search-btn) 0 vw($livesearch-text-padding);
    transition: color var(--transition-fast), var(--transition-fast);

    &::placeholder {
        color: transparent;
    }

    &:global {
        &:placeholder-shown ~ .livesearch__placeholder {
            opacity: 1;
        }

        &:focus-within ~ .livesearch__current {
            opacity: 0;
        }

        &:not(:focus-within):not(.is-empty):placeholder-shown {
            & ~ .livesearch__current {
                opacity: 1;
            }

            & ~ .livesearch__placeholder {
                opacity: 0;
            }
        }
    }
}

.abs {
    @include flex(row, flex-start, center);
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    max-height: 100%;
    overflow: hidden;
    pointer-events: none;
    z-index: 1;
    font-weight: 700;

    @include breakpoint(desktop) {
        padding: 0 vw($size-search-btn) 0 vw($size-search-btn + $livesearch-text-padding);
    }
}

.current {
    white-space: nowrap;
    opacity: 0;

    @include breakpoint(desktop) {
        @include font-size(18, 1);
        letter-spacing: -0.5px;
        padding-top: vw(1);
    }
}

.placeholder {
    opacity: 0;

    span {
        display: block;
        color: inherit;
        font-family: var(--font-primary);
        font-weight: 400;

        strong {
            font-weight: 700;
        }

        @include breakpoint(desktop) {
            @include font-size(12, 1);
            padding-top: vw(1);

            strong {
                @include font-size(18, 1);
                letter-spacing: -0.5px;
                margin-right: vw(5);
            }
        }
    }
}

.delete {
    position: absolute;
    z-index: 1;
    inset: 0 0 0 auto;

    svg {
        transition: transform 0.5s $ease-custom;

        path {
            stroke: var(--color-grey-french);
        }
    }

    @include hover {
        svg {
            transform: rotate(90deg);
        }
    }
}

.label {
    width: vw($size-button) + vw($size-filters-left-offset);
    background-color: var(--color-accent-blue);

    span {
        width: 100%;
    }

    :global {
        .button_bg {
            border-radius: vw($border-radius) 0 0 vw($border-radius);
        }
    }
}
