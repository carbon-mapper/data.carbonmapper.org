@import 'mixins';
@import 'variables/easings';
@import 'variables/sizes';

$save-search-form-elements: button, panel;

.form {
    height: 100%;

    &:global {
        &.is-display-type:not(.is-edit-mode) {
            input {
                pointer-events: none;
                text-decoration: none;
            }

            @include hover {
                .box {
                    border-color: var(--color-accent-blue);
                }
            }
        }

        &.is-edit-mode {
            .box {
                border-color: var(--color-accent-blue);
            }
        }
    }
}

.formItem {
    position: relative;
    width: 100%;

    input {
        font-weight: 600;
        width: 100%;
        position: relative;
        background-color: transparent !important;
        caret-color: var(--color-black);
        display: inline-block;
        text-decoration: underline;
        text-decoration-thickness: 0.5px;
        text-decoration-color: var(--color-black);

        &::placeholder {
            visibility: hidden;
        }

        &:placeholder-shown + label {
            visibility: visible;
        }

        @include breakpoint(desktop) {
            @include font-size(18, 30);
            letter-spacing: vw(-1);
            text-underline-offset: vw(8);
        }
    }

    label {
        color: var(--color-grey-french);
        font-weight: 600;
        font-size: inherit;
        letter-spacing: inherit;
        position: absolute;
        inset: 0 auto 0 0;
        height: fit-content;
        margin-top: auto;
        margin-bottom: auto;
        pointer-events: none;
        visibility: hidden;

        @include breakpoint(desktop) {
            @include font-size(18, 1);
            letter-spacing: vw(-1);
            top: vw(1);
        }

        &::before {
            content: '';
            position: absolute;
            inset: auto 0 0 0;
            width: 100%;
            height: 1px;
            border-bottom: 0.5px solid var(--color-grey-french);
            z-index: 1;

            @include breakpoint(desktop) {
                bottom: vw(-5);
            }
        }
    }

    &:global {
        &.is-error {
            input {
                caret-color: var(--color-red);
                color: var(--color-red);
                text-decoration-color: var(--color-red);
            }
        }
    }
}

.box {
    @include flex(column, flex-start, flex-start);
    position: relative;
    height: 100%;
    transition: border-color var(--transition-fast);
}

.error,
.bottomTag {
    font-weight: 400;
    position: absolute;
    inset: 100% 0 auto 0;
    pointer-events: none;

    @include breakpoint(desktop) {
        @include font-size(10, 1);
    }
}

.error {
    color: var(--color-red);

    @include breakpoint(desktop) {
        margin-top: vw(8);
    }
}

.bottomTag {
    @include breakpoint(desktop) {
        margin-top: vw(-1);
    }
}

.value {
    width: fit-content;
    height: 100%;
    border-bottom: 0.5px solid var(--color-grey-french);
    pointer-events: none;
    position: absolute;
    inset: 0 auto 0 0;
    color: var(--color-black);
    font-weight: 600;
    display: inline-block;
    visibility: hidden;

    &:global {
        &.is-error {
            color: var(--color-red);
            border-color: var(--color-red);
        }
    }

    @include breakpoint(desktop) {
        @include font-size(18, 1);
        letter-spacing: vw(-1);
        top: vw(3);
    }
}

.panel {
    @include z-index(panel, $save-search-form-elements);
    position: absolute;
    inset: 0 0 auto auto;
    padding: vw(10);
}

.button {
    @include z-index(button, $save-search-form-elements);
    width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
}

.bottom {
    @include flex(row, flex-end, center);
    width: 100%;
    border-top: 1px solid var(--color-grey-bright);

    @include breakpoint(desktop) {
        padding: $modal-padding;
        gap: vw(24);
    }
}

.info {
    margin-left: 0;
    margin-right: auto;
}
